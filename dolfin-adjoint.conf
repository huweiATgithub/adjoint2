#!/bin/bash
export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}
source $FENICS_HOME/fenics.env.conf
export SRC_DIR=$FENICS_HOME/src
export FENICS_PYTHON_MAJOR_VERSION=3
mkdir -p $SRC_DIR

pull_ipopt () {
    echo "FENICS-BUILDER: Updating ipopt..."
    cd $SRC_DIR
    rm -fR ipopt
    mkdir ipopt
    cd ipopt
    curl -O https://www.coin-or.org/download/source/Ipopt/Ipopt-${IPOPT_VER}.tgz
    tar -xf Ipopt-${IPOPT_VER}.tgz
    cd Ipopt-$IPOPT_VER
    cd ThirdParty/Metis
    ./get.Metis
}

move_hsl () {
    echo "Moving HSL source code to IPyOpt directory and extract..."
    mv $FENICS_HOME/coinhsl.tar.gz $SRC_DIR/ipopt/Ipopt-$IPOPT_VER/ThirdParty/HSL/
    cd $SRC_DIR/ipopt/Ipopt-$IPOPT_VER/ThirdParty/HSL
    tar -xf coinhsl.tar.gz
    mv coinhsl-2014.01.10/ coinhsl/
}

build_ipopt () {
    echo "FENICS-BUILDER: Building ipopt..."
    # install ipopt with metis and mumps, still need HSL :
    cd $SRC_DIR/ipopt/Ipopt-$IPOPT_VER
    
    ./configure --with-blas="-lblas -llapack" --with-lapack="-llapack" --prefix="/usr/local"  --enable-debug --enable-shared
    make install
}

update_ipopt () {
    pull_ipopt
    move_hsl
    build_ipopt
}

update_pyipopt () {
    cd $SRC_DIR
    git clone https://github.com/pf4d/pyipopt.git
    cd pyipopt
    # we don't link mumps instead, we use hsl
    sed -i "s/#'coinhsl'/'coinhsl'/g" setup.py
    sed -i "s/'coinmumps'/#'coinmumps'/g" setup.py
    sed -i "s#library_dirs=\[IPOPT_LIB\]#library_dirs=[IPOPT_LIB,'/usr/local/petsc-32/lib']#g" setup.py
    python${FENICS_PYTHON_MAJOR_VERSION} setup.py build
    python${FENICS_PYTHON_MAJOR_VERSION} setup.py install
}

clean_up () {
    rm -rf $SRC_DIR
}
